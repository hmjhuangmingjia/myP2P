<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.base.mapper.RealauthMapper" >
  <resultMap id="BaseResultMap" type="com.xmg.p2p.base.domain.Realauth" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="bornDate" property="bornDate" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="image1" property="image1" jdbcType="VARCHAR" />
    <result column="image2" property="image2" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />

    <result column="realName" property="realName" jdbcType="VARBINARY" />
    <result column="idNumber" property="idNumber" jdbcType="VARBINARY" />
  </resultMap>

  <resultMap id="Full_ResultMap" type="com.xmg.p2p.base.domain.Realauth" extends="BaseResultMap">
    <!-- 把审核人跟申请人写在这里，不写在BaseResultMap -->
    <association property="applier" javaType="Logininfo" columnPrefix="ap_">
      <id column="id" property="id"></id>
      <result property="username" column="username" />
    </association>
    <association property="auditor" javaType="Logininfo" columnPrefix="au_">
      <id property="id" column="id"/>
      <result property="username" column="username"/>

    </association>

  </resultMap>

  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
    insert into `realauth` (sex, bornDate, address, 
      state, image1, image2, 
      remark, auditTime, applyTime, 
      auditor_id, applier_id, realName, 
      idNumber)
    values (#{sex,jdbcType=TINYINT}, #{bornDate,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{state,jdbcType=TINYINT}, #{image1,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=TIMESTAMP},
      #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT}, #{realName,jdbcType=LONGVARBINARY},
      #{idNumber,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByPrimaryKey"  >
    update `realauth`
    set sex = #{sex,jdbcType=TINYINT},
      bornDate = #{bornDate,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      image1 = #{image1,jdbcType=VARCHAR},
      image2 = #{image2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT},
      realName = #{realName,jdbcType=LONGVARBINARY},
      idNumber = #{idNumber,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="base_column">
    id, sex, bornDate, address, state, image1, image2, remark, auditTime, applyTime,
    realName, idNumber
  </sql>

  <sql id="full_column">
    r.id, r.sex, r.bornDate, r.address, r.state, r.image1, r.image2, r.remark, r.auditTime, r.applyTime,
    r.realName, r.idNumber,ap.id AS ap_id,ap.username AS ap_username,au.id AS au_id ,au.username AS au_username
  </sql>

  <!-- 分页查询where -->
  <sql id="base_where">
    <where>
      <if test="beginDate !=null">
        AND applyTime &gt; #{beginDate}
      </if>
      <if test="endDate != null">
        AND applyTime &lt; #{endDate}
      </if>
      <if test="state > -1">
        AND state = #{state}
      </if>


    </where>

  </sql>

  <!-- 查询实名认证内容 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select <include refid="base_column"></include>
    from `realauth`
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="Full_ResultMap">
    select <include refid="full_column" />
    FROM `realauth` r JOIN logininfo ap ON r.applier_id = ap.id
    LEFT JOIN logininfo au ON r.auditor_id = au.id
    where r.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryForCount" resultType="java.lang.Integer">
    SELECT count(id)
    FROM realauth
    <include refid="base_where"/>


  </select>
  <select id="query" resultMap="Full_ResultMap">
    SELECT <include refid="full_column"/>
    FROM `realauth` r JOIN logininfo ap ON r.applier_id = ap.id
    LEFT JOIN logininfo au ON r.auditor_id = au.id
    <where>
      <if test="beginDate !=null">
        AND applyTime &gt; #{beginDate}
      </if>
      <if test="endDate != null">
        AND applyTime &lt; #{endDate}
      </if>
      <if test="state > -1">
        AND r.state = #{state}
      </if>


    </where>

    <if test="pageSize > -1">
      LIMIT #{start},#{pageSize}
    </if>

  </select>

</mapper>